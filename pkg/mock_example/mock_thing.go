// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/briantkennedy/mockbug/pkg/example (interfaces: Thing)

// Package mock_example is a generated GoMock package.
package mock_example

import (
	example "github.com/briantkennedy/mockbug/pkg/example"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockThing is a mock of Thing interface
type MockThing struct {
	ctrl     *gomock.Controller
	recorder *MockThingMockRecorder
}

// MockThingMockRecorder is the mock recorder for MockThing
type MockThingMockRecorder struct {
	mock *MockThing
}

// NewMockThing creates a new mock instance
func NewMockThing(ctrl *gomock.Controller) *MockThing {
	mock := &MockThing{ctrl: ctrl}
	mock.recorder = &MockThingMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockThing) EXPECT() *MockThingMockRecorder {
	return m.recorder
}

// Apply mocks base method
func (m *MockThing) Apply(arg0 *example.ThingApplyArg) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Apply", arg0)
}

// Apply indicates an expected call of Apply
func (mr *MockThingMockRecorder) Apply(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Apply", reflect.TypeOf((*MockThing)(nil).Apply), arg0)
}
